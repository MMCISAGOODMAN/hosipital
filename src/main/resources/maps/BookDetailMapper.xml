<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lrm.hospital.mapper.BookDetailMapper">
  <resultMap id="BaseResultMap" type="com.lrm.hospital.model.BookDetail">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="schedule_id" jdbcType="VARCHAR" property="scheduleId" />
    <result column="schedule_number" jdbcType="INTEGER" property="scheduleNumber" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="result" jdbcType="VARCHAR" property="result" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, schedule_id, schedule_number, status, result
  </sql>
  <select id="selectByExample" parameterType="com.lrm.hospital.model.BookDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from book_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from book_detail
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from book_detail
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.lrm.hospital.model.BookDetailExample">
    delete from book_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lrm.hospital.model.BookDetail">
    insert into book_detail (id, user_id, schedule_id,
      schedule_number, status, result
      )
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{scheduleId,jdbcType=VARCHAR},
      #{scheduleNumber,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{result,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lrm.hospital.model.BookDetail">
    insert into book_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="scheduleId != null">
        schedule_id,
      </if>
      <if test="scheduleNumber != null">
        schedule_number,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="result != null">
        result,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="scheduleId != null">
        #{scheduleId,jdbcType=VARCHAR},
      </if>
      <if test="scheduleNumber != null">
        #{scheduleNumber,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        #{result,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lrm.hospital.model.BookDetailExample" resultType="java.lang.Long">
    select count(*) from book_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book_detail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.scheduleId != null">
        schedule_id = #{record.scheduleId,jdbcType=VARCHAR},
      </if>
      <if test="record.scheduleNumber != null">
        schedule_number = #{record.scheduleNumber,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.result != null">
        result = #{record.result,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book_detail
    set id = #{record.id,jdbcType=VARCHAR},
    user_id = #{record.userId,jdbcType=VARCHAR},
    schedule_id = #{record.scheduleId,jdbcType=VARCHAR},
    schedule_number = #{record.scheduleNumber,jdbcType=INTEGER},
    status = #{record.status,jdbcType=VARCHAR},
    result = #{record.result,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lrm.hospital.model.BookDetail">
    update book_detail
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="scheduleId != null">
        schedule_id = #{scheduleId,jdbcType=VARCHAR},
      </if>
      <if test="scheduleNumber != null">
        schedule_number = #{scheduleNumber,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lrm.hospital.model.BookDetail">
    update book_detail
    set user_id = #{userId,jdbcType=VARCHAR},
      schedule_id = #{scheduleId,jdbcType=VARCHAR},
      schedule_number = #{scheduleNumber,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      result = #{result,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="getMyBookList" resultType="com.lrm.hospital.dto.MyBookDto">
    select b.id as bookdetail_id,u.username,s.schedule_date,b.schedule_number,
     s.current_number,b.status from book_detail b
    left join schedule s on b.schedule_id=s.id
    left join user u on s.doctor_id=u.id
    <where>
      <if test="username !=null and username!=''">
      and u.username like concat ('%',#{username},'%')
      </if>
    </where>
  </select>

  <select id="getBookList" resultType="com.lrm.hospital.dto.BookListDto">
    select b.id,u.username,u.telphone,b.schedule_number from book_detail b
    left join user u on b.user_id= u.id
    <where>
      <if test="username !=null and username!=''">
        and u.username like concat ('%',#{username},'%')
      </if>
      <if test="telphone !=null and telphone!=''">
        and u.telphone like concat ('%',#{telphone},'%')
      </if>
      <if test="status !=null and status!=''">
        and b.status = #{status}
      </if>
    </where>
  </select>
  <select id="getBookDetail" resultType="com.lrm.hospital.dto.BookDetailDto">
    select b.id,u.username,u.telphone,u.id_cart,b.status ,b.result from book_detail b
    left join  user u  on b.user_id=u.id
    where b.id =#{id}
  </select>
</mapper>
